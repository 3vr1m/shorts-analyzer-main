# Docker Compose version removed (obsolete in newer versions)

services:
  # Main application
  app:
    build: .
    ports:
      - "4001:3000"  # Changed to map to external port 4001
    environment:
      - NODE_ENV=production
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - YOUTUBE_API_KEY=${YOUTUBE_API_KEY}
      - RAPIDAPI_KEY=${RAPIDAPI_KEY}
      - ADMIN_API_KEY=${ADMIN_API_KEY}
      - ADMIN_SECRET=${ADMIN_SECRET}
    depends_on:
      - postgres
      - redis
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=${DB_NAME:-shorts_analyzer}
      - POSTGRES_USER=${DB_USER:-shorts_user}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-shorts_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"  # Changed to avoid conflict with main DB
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-shorts_user}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and queues
  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"  # Changed to avoid conflict
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # REMOVED nginx container - using main system nginx instead

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: shorts_analyzer_network
